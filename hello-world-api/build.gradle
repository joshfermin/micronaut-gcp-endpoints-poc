plugins {
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id "com.github.johnrengelman.shadow" version "4.0.2"
    id "org.jetbrains.kotlin.jvm" version "1.2.61"
    id "org.jetbrains.kotlin.kapt" version "1.2.61"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.2.61"	
    id 'com.google.protobuf' version '0.8.5'
    id 'com.google.cloud.tools.jib' version '1.4.0'
}

apply plugin:"application"

version "0.1"
group "helloworld-api"

repositories {
    mavenLocal()
    jcenter()
}

jib {
    to {
        image = "gcr.io/poncho-builds/grpc-poc".toString()
        credHelper = 'gcr'
        tags = ["$version".toString()]
    }
    from.image = 'openjdk:8-jdk-slim'
}

dependencyManagement {
    imports {
        mavenBom 'io.micronaut:micronaut-bom:1.1.2'
    }
}

ext {
    protocVersion="3.5.1"
    grpcVersion="1.17.1"
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
    compile "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
    compile "io.micronaut:micronaut-runtime"
    compile "io.micronaut.grpc:micronaut-grpc-runtime:1.0.0.M1"
    compile 'io.github.microutils:kotlin-logging:1.7.2'

    kapt "io.micronaut:micronaut-inject-java"
    kapt "io.micronaut:micronaut-validation"
    kaptTest "io.micronaut:micronaut-inject-java"
    runtime "ch.qos.logback:logback-classic:1.2.3"
    runtime "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.4.1"

    testCompile "org.junit.jupiter:junit-jupiter-api:5.3.0"
    testCompile 'io.micronaut.test:micronaut-test-junit5:1.0.2'
    testCompile "org.mockito:mockito-junit-jupiter:2.22.0"

    testRuntime "org.junit.jupiter:junit-jupiter-engine:5.3.0"
    testRuntime "org.jetbrains.spek:spek-junit-platform-engine:1.1.5"
}

shadowJar {
    mergeServiceFiles()
}

run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1')

mainClassName = "helloworld.Application"

test {
    useJUnitPlatform()
}

allOpen {
	annotation("io.micronaut.aop.Around")
}

compileKotlin {
	kotlinOptions {
	    jvmTarget = '1.8' 
	    //Will retain parameter names for Java reflection
	    javaParameters = true 
	}
}
//compileKotlin.dependsOn(generateProto)

compileTestKotlin {
	kotlinOptions {
	    jvmTarget = '1.8' 
	    javaParameters = true 
	}
}

sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}
